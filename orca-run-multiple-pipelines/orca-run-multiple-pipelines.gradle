plugins {
    id 'java'
    id 'maven-publish'
    id "io.spinnaker.plugin.service-extension"
    id "kotlin"
}

compileKotlin {
    kotlinOptions {
        languageVersion = "1.4"
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        languageVersion = "1.4"
        jvmTarget = "11"
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://armory.jfrog.io/armory/gradle-dev-local/'
        credentials(HttpHeaderCredentials) {
            name = "X-JFrog-Art-Api"
            value = "${artifactory_token}"
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

spinnakerPlugin {
    serviceName = "orca"
    pluginClass = "io.armory.plugin.smp.RunMultiplePipelinesPlugin"
    requires = "orca>=0.0.0"
}

dependencies {
    implementation(enforcedPlatform("io.spinnaker.orca:orca-bom:${orcaVersion}"))

    compileOnly 'com.google.code.gson:gson'
    compileOnly 'de.huxhorn.sulky:de.huxhorn.sulky.ulid'
    compileOnly 'io.reactivex:rxjava'

    compileOnly "org.pf4j:pf4j"
    compileOnly "io.spinnaker.kork:kork-plugins-api"
    compileOnly "io.spinnaker.kork:kork-plugins-spring-api"
    compileOnly "io.spinnaker.orca:orca-api"
    compileOnly "io.spinnaker.orca:orca-front50"
    compileOnly "io.spinnaker.orca:orca-core"
    compileOnly "io.spinnaker.orca:orca-sql"
    compileOnly "io.spinnaker.orca:orca-interlink"

    annotationProcessor platform("io.spinnaker.orca:orca-bom:$orcaVersion")
    testAnnotationProcessor platform("io.spinnaker.orca:orca-bom:$orcaVersion")

    compileOnly "io.spinnaker.kork:kork-web"
    compileOnly "io.spinnaker.kork:kork-artifacts"
    compileOnly "io.spinnaker.kork:kork-expressions"
    compileOnly "io.spinnaker.kork:kork-moniker"
    compileOnly "io.spinnaker.kork:kork-plugins"
    compileOnly "io.spinnaker.kork:kork-telemetry"
    compileOnly "io.spinnaker.kork:kork-sql"

    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("org.pf4j:pf4j")

    testImplementation(platform("io.spinnaker.orca:orca-bom:${orcaVersion}"))
    testImplementation "io.spinnaker.orca:orca-api"
    testImplementation "io.spinnaker.orca:orca-api-tck"
    testImplementation "io.spinnaker.orca:orca-core"
    testImplementation "io.spinnaker.kork:kork-plugins-tck"
    testImplementation "io.spinnaker.orca:orca-front50"

    testImplementation "dev.minutest:minutest"

    testRuntime 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testRuntime "org.junit.platform:junit-platform-commons"
}

test {
    useJUnitPlatform()
}